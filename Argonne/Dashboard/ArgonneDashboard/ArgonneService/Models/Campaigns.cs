// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Argonne.Services.ArgonneService.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Argonne.Services.ArgonneService.Models
{
    public partial class Campaigns
    {
        private IList<AdsForCampaigns> _adsForCampaigns;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<AdsForCampaigns> AdsForCampaigns
        {
            get { return this._adsForCampaigns; }
            set { this._adsForCampaigns = value; }
        }
        
        private string _campaignId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string CampaignId
        {
            get { return this._campaignId; }
            set { this._campaignId = value; }
        }
        
        private string _campaignName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string CampaignName
        {
            get { return this._campaignName; }
            set { this._campaignName = value; }
        }
        
        private IList<Devices> _devices;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Devices> Devices
        {
            get { return this._devices; }
            set { this._devices = value; }
        }
        
        private IList<Impressions> _impressions;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Impressions> Impressions
        {
            get { return this._impressions; }
            set { this._impressions = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Campaigns class.
        /// </summary>
        public Campaigns()
        {
            this.AdsForCampaigns = new LazyList<AdsForCampaigns>();
            this.Devices = new LazyList<Devices>();
            this.Impressions = new LazyList<Impressions>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken adsForCampaignsSequence = ((JToken)inputObject["adsForCampaigns"]);
                if (adsForCampaignsSequence != null && adsForCampaignsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken adsForCampaignsValue in ((JArray)adsForCampaignsSequence))
                    {
                        AdsForCampaigns adsForCampaigns = new AdsForCampaigns();
                        adsForCampaigns.DeserializeJson(adsForCampaignsValue);
                        this.AdsForCampaigns.Add(adsForCampaigns);
                    }
                }
                JToken campaignIdValue = inputObject["campaignId"];
                if (campaignIdValue != null && campaignIdValue.Type != JTokenType.Null)
                {
                    this.CampaignId = ((string)campaignIdValue);
                }
                JToken campaignNameValue = inputObject["campaignName"];
                if (campaignNameValue != null && campaignNameValue.Type != JTokenType.Null)
                {
                    this.CampaignName = ((string)campaignNameValue);
                }
                JToken devicesSequence = ((JToken)inputObject["devices"]);
                if (devicesSequence != null && devicesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken devicesValue in ((JArray)devicesSequence))
                    {
                        Devices devices = new Devices();
                        devices.DeserializeJson(devicesValue);
                        this.Devices.Add(devices);
                    }
                }
                JToken impressionsSequence = ((JToken)inputObject["impressions"]);
                if (impressionsSequence != null && impressionsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken impressionsValue in ((JArray)impressionsSequence))
                    {
                        Impressions impressions = new Impressions();
                        impressions.DeserializeJson(impressionsValue);
                        this.Impressions.Add(impressions);
                    }
                }
            }
        }
    }
}
