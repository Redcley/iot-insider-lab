// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using ArgonneService.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ArgonneService.Models
{
    public partial class Impressions
    {
        private Campaigns _campaign;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Campaigns Campaign
        {
            get { return this._campaign; }
            set { this._campaign = value; }
        }
        
        private string _campaignId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string CampaignId
        {
            get { return this._campaignId; }
            set { this._campaignId = value; }
        }
        
        private Devices _device;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Devices Device
        {
            get { return this._device; }
            set { this._device = value; }
        }
        
        private string _deviceId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string DeviceId
        {
            get { return this._deviceId; }
            set { this._deviceId = value; }
        }
        
        private DateTimeOffset? _deviceTimestamp;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? DeviceTimestamp
        {
            get { return this._deviceTimestamp; }
            set { this._deviceTimestamp = value; }
        }
        
        private Ads _displayedAd;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Ads DisplayedAd
        {
            get { return this._displayedAd; }
            set { this._displayedAd = value; }
        }
        
        private string _displayedAdId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string DisplayedAdId
        {
            get { return this._displayedAdId; }
            set { this._displayedAdId = value; }
        }
        
        private IList<FacesForImpressions> _facesForImpressions;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<FacesForImpressions> FacesForImpressions
        {
            get { return this._facesForImpressions; }
            set { this._facesForImpressions = value; }
        }
        
        private long? _impressionId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public long? ImpressionId
        {
            get { return this._impressionId; }
            set { this._impressionId = value; }
        }
        
        private DateTimeOffset? _insertTimestamp;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? InsertTimestamp
        {
            get { return this._insertTimestamp; }
            set { this._insertTimestamp = value; }
        }
        
        private string _messageId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string MessageId
        {
            get { return this._messageId; }
            set { this._messageId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Impressions class.
        /// </summary>
        public Impressions()
        {
            this.FacesForImpressions = new LazyList<FacesForImpressions>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken campaignValue = inputObject["campaign"];
                if (campaignValue != null && campaignValue.Type != JTokenType.Null)
                {
                    Campaigns campaigns = new Campaigns();
                    campaigns.DeserializeJson(campaignValue);
                    this.Campaign = campaigns;
                }
                JToken campaignIdValue = inputObject["campaignId"];
                if (campaignIdValue != null && campaignIdValue.Type != JTokenType.Null)
                {
                    this.CampaignId = ((string)campaignIdValue);
                }
                JToken deviceValue = inputObject["device"];
                if (deviceValue != null && deviceValue.Type != JTokenType.Null)
                {
                    Devices devices = new Devices();
                    devices.DeserializeJson(deviceValue);
                    this.Device = devices;
                }
                JToken deviceIdValue = inputObject["deviceId"];
                if (deviceIdValue != null && deviceIdValue.Type != JTokenType.Null)
                {
                    this.DeviceId = ((string)deviceIdValue);
                }
                JToken deviceTimestampValue = inputObject["deviceTimestamp"];
                if (deviceTimestampValue != null && deviceTimestampValue.Type != JTokenType.Null)
                {
                    this.DeviceTimestamp = ((DateTimeOffset)deviceTimestampValue);
                }
                JToken displayedAdValue = inputObject["displayedAd"];
                if (displayedAdValue != null && displayedAdValue.Type != JTokenType.Null)
                {
                    Ads ads = new Ads();
                    ads.DeserializeJson(displayedAdValue);
                    this.DisplayedAd = ads;
                }
                JToken displayedAdIdValue = inputObject["displayedAdId"];
                if (displayedAdIdValue != null && displayedAdIdValue.Type != JTokenType.Null)
                {
                    this.DisplayedAdId = ((string)displayedAdIdValue);
                }
                JToken facesForImpressionsSequence = ((JToken)inputObject["facesForImpressions"]);
                if (facesForImpressionsSequence != null && facesForImpressionsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken facesForImpressionsValue in ((JArray)facesForImpressionsSequence))
                    {
                        FacesForImpressions facesForImpressions = new FacesForImpressions();
                        facesForImpressions.DeserializeJson(facesForImpressionsValue);
                        this.FacesForImpressions.Add(facesForImpressions);
                    }
                }
                JToken impressionIdValue = inputObject["impressionId"];
                if (impressionIdValue != null && impressionIdValue.Type != JTokenType.Null)
                {
                    this.ImpressionId = ((long)impressionIdValue);
                }
                JToken insertTimestampValue = inputObject["insertTimestamp"];
                if (insertTimestampValue != null && insertTimestampValue.Type != JTokenType.Null)
                {
                    this.InsertTimestamp = ((DateTimeOffset)insertTimestampValue);
                }
                JToken messageIdValue = inputObject["messageId"];
                if (messageIdValue != null && messageIdValue.Type != JTokenType.Null)
                {
                    this.MessageId = ((string)messageIdValue);
                }
            }
        }
    }
}
