// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace ArgonneService.Models
{
    public partial class DeviceDto
    {
        private DateTimeOffset? _activeFrom;
        
        /// <summary>
        /// Optional. Operating hours start time for the device
        /// </summary>
        public DateTimeOffset? ActiveFrom
        {
            get { return this._activeFrom; }
            set { this._activeFrom = value; }
        }
        
        private DateTimeOffset? _activeTo;
        
        /// <summary>
        /// Optional. Operating hours end time for the device
        /// </summary>
        public DateTimeOffset? ActiveTo
        {
            get { return this._activeTo; }
            set { this._activeTo = value; }
        }
        
        private string _address;
        
        /// <summary>
        /// Optional. Device location, Address line 1
        /// </summary>
        public string Address
        {
            get { return this._address; }
            set { this._address = value; }
        }
        
        private string _address2;
        
        /// <summary>
        /// Optional. Device location, Address line 2
        /// </summary>
        public string Address2
        {
            get { return this._address2; }
            set { this._address2 = value; }
        }
        
        private string _address3;
        
        /// <summary>
        /// Optional. Device location, Address line 3
        /// </summary>
        public string Address3
        {
            get { return this._address3; }
            set { this._address3 = value; }
        }
        
        private string _campaignId;
        
        /// <summary>
        /// Optional. Current Campaign assigned to device
        /// </summary>
        public string CampaignId
        {
            get { return this._campaignId; }
            set { this._campaignId = value; }
        }
        
        private string _city;
        
        /// <summary>
        /// Optional. Device location, City
        /// </summary>
        public string City
        {
            get { return this._city; }
            set { this._city = value; }
        }
        
        private string _deviceId;
        
        /// <summary>
        /// Optional. Globally unique identifier for a device assgined by
        /// Argonne system
        /// </summary>
        public string DeviceId
        {
            get { return this._deviceId; }
            set { this._deviceId = value; }
        }
        
        private string _deviceName;
        
        /// <summary>
        /// Required. User friendly name for a device
        /// </summary>
        public string DeviceName
        {
            get { return this._deviceName; }
            set { this._deviceName = value; }
        }
        
        private string _postalCode;
        
        /// <summary>
        /// Optional. Device location, Postal Code
        /// </summary>
        public string PostalCode
        {
            get { return this._postalCode; }
            set { this._postalCode = value; }
        }
        
        private string _primaryKey;
        
        /// <summary>
        /// Required. Identifier for a device assigned by Azure IOT Hub
        /// </summary>
        public string PrimaryKey
        {
            get { return this._primaryKey; }
            set { this._primaryKey = value; }
        }
        
        private string _stateProvince;
        
        /// <summary>
        /// Optional. Device location, State or Province Abbreviation
        /// </summary>
        public string StateProvince
        {
            get { return this._stateProvince; }
            set { this._stateProvince = value; }
        }
        
        private string _timezone;
        
        /// <summary>
        /// Optional. Timezone of device
        /// </summary>
        public string Timezone
        {
            get { return this._timezone; }
            set { this._timezone = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DeviceDto class.
        /// </summary>
        public DeviceDto()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the DeviceDto class with required
        /// arguments.
        /// </summary>
        public DeviceDto(string primaryKey, string deviceName)
            : this()
        {
            if (primaryKey == null)
            {
                throw new ArgumentNullException("primaryKey");
            }
            if (deviceName == null)
            {
                throw new ArgumentNullException("deviceName");
            }
            this.PrimaryKey = primaryKey;
            this.DeviceName = deviceName;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken activeFromValue = inputObject["activeFrom"];
                if (activeFromValue != null && activeFromValue.Type != JTokenType.Null)
                {
                    this.ActiveFrom = ((DateTimeOffset)activeFromValue);
                }
                JToken activeToValue = inputObject["activeTo"];
                if (activeToValue != null && activeToValue.Type != JTokenType.Null)
                {
                    this.ActiveTo = ((DateTimeOffset)activeToValue);
                }
                JToken addressValue = inputObject["address"];
                if (addressValue != null && addressValue.Type != JTokenType.Null)
                {
                    this.Address = ((string)addressValue);
                }
                JToken address2Value = inputObject["address2"];
                if (address2Value != null && address2Value.Type != JTokenType.Null)
                {
                    this.Address2 = ((string)address2Value);
                }
                JToken address3Value = inputObject["address3"];
                if (address3Value != null && address3Value.Type != JTokenType.Null)
                {
                    this.Address3 = ((string)address3Value);
                }
                JToken campaignIdValue = inputObject["campaignId"];
                if (campaignIdValue != null && campaignIdValue.Type != JTokenType.Null)
                {
                    this.CampaignId = ((string)campaignIdValue);
                }
                JToken cityValue = inputObject["city"];
                if (cityValue != null && cityValue.Type != JTokenType.Null)
                {
                    this.City = ((string)cityValue);
                }
                JToken deviceIdValue = inputObject["deviceId"];
                if (deviceIdValue != null && deviceIdValue.Type != JTokenType.Null)
                {
                    this.DeviceId = ((string)deviceIdValue);
                }
                JToken deviceNameValue = inputObject["deviceName"];
                if (deviceNameValue != null && deviceNameValue.Type != JTokenType.Null)
                {
                    this.DeviceName = ((string)deviceNameValue);
                }
                JToken postalCodeValue = inputObject["postalCode"];
                if (postalCodeValue != null && postalCodeValue.Type != JTokenType.Null)
                {
                    this.PostalCode = ((string)postalCodeValue);
                }
                JToken primaryKeyValue = inputObject["primaryKey"];
                if (primaryKeyValue != null && primaryKeyValue.Type != JTokenType.Null)
                {
                    this.PrimaryKey = ((string)primaryKeyValue);
                }
                JToken stateProvinceValue = inputObject["stateProvince"];
                if (stateProvinceValue != null && stateProvinceValue.Type != JTokenType.Null)
                {
                    this.StateProvince = ((string)stateProvinceValue);
                }
                JToken timezoneValue = inputObject["timezone"];
                if (timezoneValue != null && timezoneValue.Type != JTokenType.Null)
                {
                    this.Timezone = ((string)timezoneValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type DeviceDto
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.DeviceName == null)
            {
                throw new ArgumentNullException("DeviceName");
            }
            if (this.PrimaryKey == null)
            {
                throw new ArgumentNullException("PrimaryKey");
            }
            if (this.ActiveFrom != null)
            {
                outputObject["activeFrom"] = this.ActiveFrom.Value;
            }
            if (this.ActiveTo != null)
            {
                outputObject["activeTo"] = this.ActiveTo.Value;
            }
            if (this.Address != null)
            {
                outputObject["address"] = this.Address;
            }
            if (this.Address2 != null)
            {
                outputObject["address2"] = this.Address2;
            }
            if (this.Address3 != null)
            {
                outputObject["address3"] = this.Address3;
            }
            if (this.CampaignId != null)
            {
                outputObject["campaignId"] = this.CampaignId;
            }
            if (this.City != null)
            {
                outputObject["city"] = this.City;
            }
            if (this.DeviceId != null)
            {
                outputObject["deviceId"] = this.DeviceId;
            }
            if (this.DeviceName != null)
            {
                outputObject["deviceName"] = this.DeviceName;
            }
            if (this.PostalCode != null)
            {
                outputObject["postalCode"] = this.PostalCode;
            }
            if (this.PrimaryKey != null)
            {
                outputObject["primaryKey"] = this.PrimaryKey;
            }
            if (this.StateProvince != null)
            {
                outputObject["stateProvince"] = this.StateProvince;
            }
            if (this.Timezone != null)
            {
                outputObject["timezone"] = this.Timezone;
            }
            return outputObject;
        }
    }
}
