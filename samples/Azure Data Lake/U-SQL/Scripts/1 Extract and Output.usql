/*
Note:
As there are dependencies, run the scripts in the given order, running 1 Extract and Output.usql first and then run 2 Create View, etc.
The purpose of this script is to give you a taste of the new Big Data query language U-SQL.
*/

/*
This U-SQL script has no transformation step. It reads from an input file called SearchLog.tsv, schematizing it while reading and the outputs the intermediate rowset back into the file whose name you specified. The Duration field could be null or of type int, while the UserId cannot be null. Note that the C# string type is always nullable.
Some concepts that this script introduce are:
1. Rowset variables: Each query expression that produces a rowset can be assigned to a variable. Variables in U-SQL follow the T-SQL variable naming pattern of @ followed by a name (@searchlog in this case). Note that assignment is not forcing the execution. It is merely naming the expression and gives you the ability to build-up more complex expressions.
2. EXTRACT gives you the ability to define a schema on read. The schema is specified by a column name and C# type name pair per column. It uses a so called extractor that can be written by the user. In this case though we are using the built-in Tsv extractor that is provided by the Extractors class since the input data is not comma but TAB separated.
3. OUTPUT takes a rowset and serializes it as a comma-separated file into the specified location. Again the outputter can be written by the user, but we are using the built-in Csv outputter provided by the Outputters class.
*/

@results = EXTRACT
	stationCode string, 
	observedOn DateTime,
	wind string,
	visibility decimal?,
	weather string,
	conditions string,
	temperature decimal?,
	dewpoint decimal?,
	humidity decimal?,
	pressure decimal?,
    filename string
FROM "/Weather/{filename:*}.csv"
USING Extractors.Csv();

@selection = SELECT
	stationCode, 
	observedOn,
	wind,
	visibility,
	weather,
	conditions,
	temperature,
	dewpoint,
	humidity,
	pressure
FROM @results
WHERE stationCode.ToLower() == "krnt";

OUTPUT @selection TO "/output/Renton.tsv"
ORDER BY observedOn DESC
USING Outputters.Tsv();